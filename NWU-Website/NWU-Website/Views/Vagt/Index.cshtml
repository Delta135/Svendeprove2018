@model NWU_Website.Models.ChartData

@using NWU_Website.Controllers;

@{

    ViewBag.Title = "Index";

    Layout = "~/Views/Shared/_Layout.cshtml";

}





<html>

<head>

    <style>

        .ppp {
            /*float: left;*/
        }
    </style>



    @*Get and load Google Charts loader - Claus*@

    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>

    <script type="text/javascript">



        //Get newest version of Google Charts and load Chart package

        //language is set to dk - Claus

        google.charts.load('current', { 'packages': ['gauge'], 'language': 'dk' });





        //Set methodes to run when Google Charts loader is ready - Claus

        google.charts.setOnLoadCallback(draw1Chart);

        google.charts.setOnLoadCallback(draw2Chart);

        google.charts.setOnLoadCallback(draw3Chart);

        google.charts.setOnLoadCallback(draw4Chart);

        google.charts.setOnLoadCallback(draw5Chart);

        google.charts.setOnLoadCallback(draw6Chart);

        google.charts.setOnLoadCallback(draw7Chart);

        google.charts.setOnLoadCallback(draw8Chart);

        google.charts.setOnLoadCallback(updatePage);



        // Method refresh the page - Claus

        function updatePage()

        {

            //location.reload(false);

        }



        //Method draw a Gauge chart with text, color and numbers - Claus

        function draw1Chart() {

            var name = "@Model.AreaNames.ElementAt(0)"; //save model val in javascript



            //value from database - Claus

            var data = google.visualization.arrayToDataTable([

                ['Label', 'Value'],

                [name, 1] //value must be > 0, or it dies...

            ]);



            //Here we set Max Numbers and other visual options - Claus

            var options = {

                max: @Model.MaxNumber.ElementAt(0),

                redFrom: 180, redTo: 200,

                yellowFrom: 150, yellowTo: 180,

                minorTicks: 1

            };



            // Create a chart of type Gauge and place it in the <body> where id = chart_div1 - Claus

            var chart = new google.visualization.Gauge(document.getElementById('chart_div1'));



            //Set Gauge value from database - Claus

            data.setValue(0, 1, @Model.CurrentNumber.ElementAt(0));



            //Draw chart with data and options - Claus

            chart.draw(data, options);

        }



          //Method draw a Gauge chart with text, color and numbers - Claus

        function draw2Chart() {

            var name = "@Model.AreaNames.ElementAt(1)";

            // Model.Tal2 is the value from database - Claus

            var data = google.visualization.arrayToDataTable([

                ['Label', 'Value'],

                [name, 2]

            ]);



            //Here we set Max Numbers and other visual options - Claus

            var options = {

                max: @Model.MaxNumber.ElementAt(1),

                redFrom: 370, redTo: 400,

                yellowFrom: 330, yellowTo: 370,

                minorTicks: 1

            };



            // Create a chart of type Gauge and place it in the <body> where id = chart_div2 - Claus

            var chart = new google.visualization.Gauge(document.getElementById('chart_div2'));



            //Set Gauge value from database - Claus

            data.setValue(0, 1, @Model.CurrentNumber.ElementAt(1));



            //Draw chart with data and options - Claus

            chart.draw(data, options);

        }





         //Method draw a Gauge chart with text, color and numbers - Claus

        function draw3Chart() {

             var name = "@Model.AreaNames.ElementAt(2)";

            // Model.Tal3 is the value from database - Claus

            var data = google.visualization.arrayToDataTable([

                ['Label', 'Value'],

                [name, 3]

            ]);



            //Here we set Max Numbers and other visual options - Claus

            var options = {

                max: @Model.MaxNumber.ElementAt(2),

                redFrom: 180, redTo: 200,

                yellowFrom: 150, yellowTo: 180,

                minorTicks: 1

            };



            // Create a chart of type Gauge and place it in the <body> where id = chart_div3 - Claus

            var chart = new google.visualization.Gauge(document.getElementById('chart_div3'));



            //Set Gauge value from database - Claus

            data.setValue(0, 1, @Model.CurrentNumber.ElementAt(2));



            //Draw chart with data and options - Claus

            chart.draw(data, options);

        }







    </script>

</head>



<body style="background-color:white;">



    @*Ved at pakke alt ind i <div></div> og bruge col-lg-tal

        kan vi styre placering af de 8 Gauge-meter og alt tekst - Claus*@

    <div align="center">

        <div class="container">

            <div class="row">

                <div class="col-lg-12" align="center">

                    <h1 style="color:dimgrey;font-family:verdana;">Nordic Water Universe</h1>

                </div>

            </div>

            <br />

            <br />

            <div class="text-center">

                <h2> Indendørsaktiviteter</h2>

            </div>

            <div class="container-fluid">

                <div class="row">

                    <div class="col-xs-5 col-sm-6 col-lg-4" style="background-color:white;">

                        <div id="chart_div1" style="width: 290px; height: 180px;"></div>

                    </div>

                    <div class="col-xs-5 col-sm-6 col-lg-4" style="background-color:white;">

                        <div id="chart_div2" style="width: 290px; height: 180px;"></div>

                    </div>

                    <div class="col-xs-5 col-sm-6 col-lg-4" style="background-color:white;">

                        <div id="chart_div3" style="width: 290px; height: 180px;"></div>

                    </div>

                </div>

            </div>





        </div>

    </div>

</body>

</html>